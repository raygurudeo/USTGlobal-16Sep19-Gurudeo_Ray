package com.ustglobal.java8features;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;



public class StudentHelper {

	void displayAllStudent(ArrayList<Student> al) {

		Iterator<Student> i = al.iterator();
		while(i.hasNext()) {

			Student s = i.next();
			System.out.println("ID : "+s.id);
			System.out.println("Name : "+s.name);
			System.out.println("Perentage : "+s.percentage);
			System.out.println("------------");
		}
	}

	void displayFailedStudent(ArrayList<Student> al) {

		List<Student> l = al.stream().filter(student -> student.percentage < 35).
				collect(Collectors.toList());
		Iterator<Student> i = l.iterator();
		while(i.hasNext()) {

			Student e = i.next();
			System.out.println("Id : "+e.id);
			System.out.println("Name : "+e.name);
			System.out.println("Percentage : "+e.percentage);
			System.out.println("-----------");
		}
	}
	void displayPassedStudent(ArrayList<Student> al) {

		List<Student> l = al.stream().filter(student -> student.percentage >= 35).
				collect(Collectors.toList());
		Iterator<Student> i = l.iterator();
		while(i.hasNext()) {

			Student e = i.next();
			System.out.println("Id : "+e.id);
			System.out.println("Name : "+e.name);
			System.out.println("Percentage : "+e.percentage);
			System.out.println("-----------");
		}
	}
	Comparator<Student> cmp = (m1, m2) -> {
		
		if(m1.percentage > m2.percentage) {
			
			return 1;
		}
		else if(m1.percentage < m2.percentage) {
			
			return -1;
		}
		else {
			
			return 0;
		}
	};
	void topper(ArrayList<Student> al) {

		Student s =al.stream().max(cmp).get();
			System.out.println("Id : "+s.id);
			System.out.println("Name : "+s.name);
			System.out.println("Percentage : "+s.percentage);
			System.out.println("-----------");
	}
}
